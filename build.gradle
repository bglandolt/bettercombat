buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        mavenCentral()
    }
    dependencies {
        classpath 'com.anatawa12.forge:ForgeGradle:2.3-1.0.8'
    }
}

apply plugin: "maven"
apply plugin: 'net.minecraftforge.gradle.forge'

version = '2023.12.20'
group = 'bettercombat' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'ImmersiveCombat'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    version = "${minecraft_version}-${forge_version}"
    runDir = "run"
    mappings = mcp_mappings
    useDepAts = true
}

// minecraft {
//     // The mappings can be changed at any time, and must be in the following format.
//     // snapshot_YYYYMMDD   Snapshot are built nightly.
//     // stable_#            Stables are built at the discretion of the MCP team.
//     // Use non-default mappings at your own risk. they may not always work.
//     // Simply re-run your setup task after changing the mappings to update your workspace.
//     //mappings channel: 'snapshot', version: '20171003-1.12'
//     mappings channel: 'stable', version: '39'
//     // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
//     // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

//     // Default run configurations.
//     // These can be tweaked, removed, or duplicated as needed.
//     runs {
//         client {
//             workingDirectory project.file('run')

//             // Recommended logging data for a userdev environment
//             property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

//             // Recommended logging level for the console
//             property 'forge.logging.console.level', 'debug'
//         }

//         server {

//             // Recommended logging data for a userdev environment
//             property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

//             // Recommended logging level for the console
//             property 'forge.logging.console.level', 'debug'
//         }
//     }
// }

dependencies {

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "examplemod",
            "Specification-Vendor": "examplemodsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "FMLAT": "bettercombat_at.cfg",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
